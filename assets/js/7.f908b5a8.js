(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{363:function(t,e,a){"use strict";a.r(e);var s=a(44),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"introduction"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[t._v("#")]),t._v(" Introduction")]),t._v(" "),a("h2",{attrs:{id:"what-is-mallos-input"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what-is-mallos-input"}},[t._v("#")]),t._v(" What is Mallos.Input?")]),t._v(" "),a("p",[t._v("Mallos.Input is a portable way of accessing HID (Human interface device) devices cross-platform.")]),t._v(" "),a("p",[t._v("The goal of Mallos.Input is to provide a simple and reusable input system,\nwith very limited amount of knowladge to get started.")]),t._v(" "),a("p",[t._v("Mallos.Input is built on top of "),a("strong",[t._v(".NET Standard 2.0")]),t._v(",\nwhile the platform specific code have more requirements.\nBy having an abstract and portable way of handling the input,\nit is easier to create portable code.")]),t._v(" "),a("h1",{attrs:{id:"getting-started"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getting-started"}},[t._v("#")]),t._v(" Getting Started")]),t._v(" "),a("p",[t._v('For each platform there are a few different steps that have to be taken.\nIt\'s better to follow the instructions under the "Platform" category,\nit can be found in the sidebar.')]),t._v(" "),a("h2",{attrs:{id:"currently-supported-platforms"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#currently-supported-platforms"}},[t._v("#")]),t._v(" Currently Supported Platforms")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"platforms/veldrid"}},[t._v("Veldrid")])]),t._v(" "),a("li",[a("a",{attrs:{href:"platforms/blazor"}},[t._v("ASP.NET Blazor")])])]),t._v(" "),a("h2",{attrs:{id:"what-is-device-sets"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what-is-device-sets"}},[t._v("#")]),t._v(" What is Device Sets?")]),t._v(" "),a("p",[t._v("Device set is a set of all devices that allows for easier usage of the library.")]),t._v(" "),a("p",[a("em",[t._v("It's still possible to only use one type of device on it's own.")])]),t._v(" "),a("p",[t._v("Device sets are created by each platform to collect all the types of devices,\nwhich make it easy to handle multiple types of platform without writing a lot of code.\nTo handle the device sets in an abstract way there is IDeviceSet which is a shared\ninterface between them.")])])}),[],!1,null,null,null);e.default=r.exports}}]);